library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(shiny)
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(wid,
original_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount)) %>%
filter(gender %in% c("m", "f")) %>%
filter(marital %in% c("single", "married")) %>%
filter(parenthood %in% c("n", "y")) %>%
filter(reflection_period %in% c("24h", "3m")) %>%
mutate(reflection_period = fct_recode(reflection_period,
months_3 = "3m", hours_24 = "24h"))
datatable(hm_data)
bag_of_words <-  hm_data %>%
unnest_tokens(word, text)
word_count <- bag_of_words %>%
count(word, sort = TRUE)
View(bag_of_words)
View(word_count)
View(bag_of_words)
hm_bigrams <- hm_data %>%
filter(count != 1) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
bigram_counts <- hm_bigrams %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
count(word1, word2, sort = TRUE)
View(hm_bigrams)
library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(shiny)
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid")
View(hm_data)
ToothGrowth
ToothGrowth$supp
unique(ToothGrowth$supp)
knitr::opts_chunk$set(echo = TRUE)
unique(ToothGrowth$supp)
unique(ToothGrowth$supp)[1]
# VC
ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[1],]
# VC
ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[1],]$len
# VC
VC_len <- ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[1],]$len
VC_len_kurtosis <- kurtosis(VC_len, type = 3)
library(e1071)
VC_len_kurtosis <- kurtosis(VC_len, type = 3)
VC_len_kurtosis
VC_len_kurtosis <- kurtosis(VC_len, type = 1)
VC_len_kurtosis
VC_len
VC_len_kurtosis <- kurtosis(VC_len, type = 2)
VC_len_kurtosis
(VC_len-(mean(VC_len)))^4
sum(VC_len-(mean(VC_len)))^4
sum((VC_len-(mean(VC_len)))^4)
sum((VC_len-(mean(VC_len)))^4)/length(VC_len)
sum((VC_len-(mean(VC_len)))^4)/length(VC_len)/sd(VC_len)
sum((VC_len-(mean(VC_len)))^4)/length(VC_len)/sd(VC_len)^4
VC_len_kurtosis <- kurtosis(VC_len, type = 3)
sum((VC_len-(mean(VC_len)))^4)/length(VC_len)/(sum((VC_len-(mean(VC_len)))^2)/length(VC_len))^2
sum((VC_len-(mean(VC_len)))^4)/length(VC_len)/(sum((VC_len-(mean(VC_len)))^2)/length(VC_len))^2 -3
sum((VC_len-(mean(VC_len)))^4)/length(VC_len)/(sd(VC_len))^4 -3
outlier(VC_len)
library(e1071)
library(psych)
outlier(VC_len)
boxplot(VC_len)
hist(VC_len)
hist(VC_len)
lines(density(VC_len), col = "red", lwd = 2)
hist(VC_len, probability = true)
hist(VC_len, freq = TRUE)
lines(density(VC_len), col = "red", lwd = 2)
hist(VC_len, probability = TRUE)
lines(density(VC_len), col = "red", lwd = 2)
var(VC_len)
IQR(VC_len)
hist(VC_len, probability = TRUE)
lines(density(VC_len), col = "red", lwd = 2)
VC_len_median <- median(VC_len)
VC_len_median
VC_len_IQR <- IQR(VC_len)
VC_len_IQR
ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[2],]
# OJ
OJ_len <- ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[2],]$len
boxplot(OJ_len)
OJ_len
install.packages("bootstrap")
library(bootstrap)
# VC
VC_jackknife <- jackknife(VC_len, kurtosis)
VC_jackknife
VC_jackknife_variance <- VC_jackknife$jack.se^2
VC_jackknife_variance
# VC
VC_jackknife <- jackknife(VC_len, kurtosis)
VC_jackknife
VC_jackknife_variance
# OJ
OJ_bootstrap <- bootstrap(OJ_len, kurtosis)
# OJ
OJ_bootstrap <- bootstrap(OJ_len, nboot = length(OJ_len),kurtosis)
OJ_bootstrap
# OJ
OJ_bootstrap <- bootstrap(OJ_len, nboot = 1,kurtosis)
OJ_bootstrap
OJ_jackknife_bias
# VC
VC_jackknife_median <- jackknife(VC_len, median)
VC_jackknife_median
OJ_jackknife_kurtosis
# OJ
OJ_jackknife_kurtosis <- jackknife(OJ_len, kurtosis)
OJ_jackknife_kurtosis
# VC
VC_jackknife_median <- jackknife(VC_len, median)
VC_jackknife_median
# OJ
OJ_jackknife_IQR <- jackknife(OJ_len, IQR)
OJ_jackknife_IQR_bias <- OJ_jackknife_IQR$jack.bias
OJ_jackknife_IQR_variance <- OJ_jackknife_IQR$jack.se^2
OJ_jackknife_IQR
# OJ
OJ_bootstrap <- boot(OJ_len, kurtosis)
library(boot)
# OJ
OJ_bootstrap <- boot(OJ_len, kurtosis)
# OJ
OJ_bootstrap <- boot(OJ_len, R=999, kurtosis)
OJ_bootstrap
# OJ
OJ_bootstrap <- boot(OJ_len, R=999, median)
# OJ
OJ_jackknife_IQR <- jackknife(OJ_len, IQR)
OJ_jackknife_IQR_bias <- OJ_jackknife_IQR$jack.bias
OJ_jackknife_IQR_variance <- OJ_jackknife_IQR$jack.se^2
knitr::opts_chunk$set(echo = TRUE)
VC_jackknife_kurtosis
library(e1071)
# VC
VC_len <- ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[1],]$len
boxplot(VC_len)
hist(VC_len, probability = TRUE)
lines(density(VC_len), col = "red", lwd = 2)
var(VC_len)
IQR(VC_len)
VC_len_kurtosis <- kurtosis(VC_len, type = 3)
install.packages("e1071")
library(e1071)
library(psych)
install.packages(c("psych", "bootstrap", "boot"))
library(e1071)
library(psych)
library(bootstrap)
library(boot)
# VC
VC_len <- ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[1],]$len
boxplot(VC_len)
hist(VC_len, probability = TRUE)
lines(density(VC_len), col = "red", lwd = 2)
var(VC_len)
VC_len_kurtosis <- kurtosis(VC_len, type = 3)
VC_len_median <- median(VC_len)
VC_len_IQR <- IQR(VC_len)
# OJ
OJ_len <- ToothGrowth[ToothGrowth$supp == unique(ToothGrowth$supp)[2],]$len
OJ_len
boxplot(OJ_len)
hist(OJ_len, probability = TRUE)
lines(density(OJ_len), col = "red", lwd = 2)
var(OJ_len)
IQR(OJ_len)
OJ_len_kurtosis <- kurtosis(OJ_len, type = 3)
OJ_len_median <- median(OJ_len)
OJ_len_IQR <- IQR(OJ_len)
# VC
VC_jackknife_kurtosis <- jackknife(VC_len, kurtosis)
VC_jackknife_kurtosis
30*VC_jackknife_kurtosis$jack.se^2
var(VC_jackknife_kurtosis$jack.values)
VC_jackknife_kurtosis_variance <-
length(VC_jackknife_kurtosis$jack.values)*VC_jackknife_kurtosis$jack.se^2
length(VC_jackknife_kurtosis$jack.values)*VC_jackknife_kurtosis$jack.se^2
VC_jackknife_kurtosis
var(VC_jackknife_kurtosis$jack.values)
kurtosis(VC_len)
mean(VC_jackknife_kurtosis$jack.values) - kurtosis(VC_len)
VC_jackknife_kurtosis$jack.values
total <- sum(VC_jackknife_kurtosis$jack.values)/30
(VC_jackknife_kurtosis$jack.values - total)^2
sum((VC_jackknife_kurtosis$jack.values - total)^2)*29/30
VC_jackknife_kurtosis$jack.se^2
library("bootstrap")
library("bootstrap").libPaths()
library("bootstrap").libPaths("bootstrap")
library("bootstrap").libPaths
library.libPath
library.libPath()
.libPaths()
VC_jackknife_kurtosis_variance
VC_jackknife_kurtosis$jack.se^2
VC_jackknife_kurtosis_variance <- VC_jackknife_kurtosis$jack.se^2
VC_jackknife_kurtosis_variance <- VC_jackknife_kurtosis$jack.se^2
VC_jackknife_kurtosis_variance
